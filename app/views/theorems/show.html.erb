<div class="page-container">
  <div>
    <% params[:tids].split(",").each_with_index do |tid, index| %>
      <% previous = index == 0 ? "" : params[:tids].split(",")[0..(index-1)].join(",") %>
      <a href="<%=theorem_path(tid)%>?tids=<%=previous%>"><%=Theorem.find(tid).text%></a> > 
    <% end if params[:tids]%>
  </div>

  <div class="theorem-control-buttons">
    <% if can? :update, @theorem %>
      <button title="Add a new argument to support this theorem" id="new-argument">New Argument</button>
      <% unless @theorem.source %>
        <%= react_component('NewSource', updateTheoremPath: theorem_path(@theorem), theorem_id: @theorem.id) %>
      <% end %>
    <% end %>
  </div>

  <h1><%=@theorem.text%></h1>

  <% if can? :update, @theorem %>
    <%= react_component('NewArgument', createArgumentPath: arguments_path, theorem_id: @theorem.id, user: current_user, max: Theorem::MAX_LENGTH) %>
  <% end %>

  <% if @theorem.arguments.count == 0 && @theorem.source.nil?%>
    <p>This is currently an unsupported claim.</p>
  <% elsif @theorem.source %>
    <p>Source supporting the claim: <%= link_to @theorem.source, @theorem.source %></p>
  <% end %>

  <% @theorem.arguments.each do |argument| %>
    <%= react_component('ShowArgument',
      argument: argument,
      tids: params[:tids],
      user: current_user,
      signInPath: user_omniauth_authorize_path(:facebook) + '?' + {origin: request.path}.to_query,
      newObjectionPath: new_theorem_path,
      max: Theorem::MAX_LENGTH,
    ) %>
  <% end %>

  <hr>


  <div class="comments">
    <h3>Comments</h3>
    <% @theorem.comments.each do |comment| %>
      <%= render partial: 'comments/comment', locals: {comment: comment} %>
    <% end %>
  </div>
  <% if current_user %>
    <%= react_component('NewComment', object: {id: @theorem.id, type: @theorem.class.to_s}, user: current_user) %>
  <% else %>
    <%= link_to "Sign in to make a new comment", (user_omniauth_authorize_path(:facebook) + '?' + {origin: request.path}.to_query) %>
  <% end %>
</div>

<script>
  $(function(){
    $('#new-argument').click(function(e) {
       $(window).trigger('new-argument-toggle');
    })
  })
</script>
